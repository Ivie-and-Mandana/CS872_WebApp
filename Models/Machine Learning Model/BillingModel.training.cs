﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML;

namespace CS872_WebApp
{
    public partial class BillingModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"num_rooms", @"num_rooms"),new InputOutputColumnPair(@"num_people", @"num_people"),new InputOutputColumnPair(@"housearea", @"housearea"),new InputOutputColumnPair(@"is_ac", @"is_ac"),new InputOutputColumnPair(@"is_tv", @"is_tv"),new InputOutputColumnPair(@"is_flat", @"is_flat"),new InputOutputColumnPair(@"ave_monthly_income", @"ave_monthly_income"),new InputOutputColumnPair(@"num_children", @"num_children"),new InputOutputColumnPair(@"is_urban", @"is_urban")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"num_rooms",@"num_people",@"housearea",@"is_ac",@"is_tv",@"is_flat",@"ave_monthly_income",@"num_children",@"is_urban"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=4,MinimumExampleCountPerLeaf=25,NumberOfIterations=4,MaximumBinCountPerFeature=119,LearningRate=1F,LabelColumnName=@"amount_paid",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=1F,FeatureFraction=0.902065843002185F,L1Regularization=3.51343659411209E-07F,L2Regularization=3.93698755065939E-07F}}));

            return pipeline;
        }
    }
}
